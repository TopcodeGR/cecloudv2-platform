<?xml version="1.1" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext" xmlns:pro="http://www.liquibase.org/xml/ns/pro" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd http://www.liquibase.org/xml/ns/pro http://www.liquibase.org/xml/ns/pro/liquibase-pro-latest.xsd http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-latest.xsd">
    
    <include file="db/changelog/web.xml" />
    <include file="db/changelog/pdf-generator.xml" />

    <changeSet id="standard_table" author="topal">
        <sql>
            CREATE TABLE standard (
                                      id BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
                                      name VARCHAR(255) NOT NULL,
                                      doc_file_template BIGINT NOT NULL,
                                      CONSTRAINT fk_doc_file_template FOREIGN KEY(doc_file_template) REFERENCES file_template(id) ON DELETE CASCADE ON UPDATE CASCADE
            );
        </sql>
        <rollback>
            DROP TABLE IF EXISTS material;
        </rollback>
    </changeSet>

    <changeSet id="add_inheritance_account_table_columns" author="topal">
        <sql>
            ALTER TABLE account ADD afm  VARCHAR(255) NOT NULL default '';
            ALTER TABLE account ADD business_name  VARCHAR(255) NOT NULL default '';
            ALTER TABLE account ADD country  VARCHAR(255) NOT NULL default 'GR';
            ALTER TABLE account ADD city  VARCHAR(255) NOT NULL default '';
            ALTER TABLE account ADD address  VARCHAR(255) NOT NULL default '';
            ALTER TABLE account ADD address_number  VARCHAR(255) NOT NULL default '';
            ALTER TABLE account ADD doi  VARCHAR(255) NOT NULL default '';
            ALTER TABLE account ADD phone  VARCHAR(255) NOT NULL default '';
            ALTER TABLE account ADD logo  VARCHAR(255)  default '';
            ALTER TABLE account ADD signature  VARCHAR(255) default '';
            alter table account add dtype varchar(31) not null default 'CECloudv2Account';
        </sql>
        <rollback>
            ALTER TABLE account DROP COLUMN  afm;
            ALTER TABLE account DROP COLUMN  business_name;
            ALTER TABLE account DROP COLUMN  country;
            ALTER TABLE account DROP COLUMN  city;
            ALTER TABLE account DROP COLUMN  address;
            ALTER TABLE account DROP COLUMN  address_number;
            ALTER TABLE account DROP COLUMN  doi;
            ALTER TABLE account DROP COLUMN  phone;
            ALTER TABLE account DROP COLUMN  logo;
            ALTER TABLE account DROP COLUMN  signature;
            ALTER TABLE account DROP COLUMN  dtype;
        </rollback>
    </changeSet>

    <changeSet id="machine_category_table" author="topal">
        <sql>
            CREATE TABLE machine_category (
                id BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
                name VARCHAR(255) NOT NULL UNIQUE
            );
        </sql>
        <rollback>
            DROP TABLE IF EXISTS machine_category;
        </rollback>
    </changeSet>

    <changeSet id="machine" author="topal">
        <sql>
            CREATE TABLE machine (
                id BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
                account BIGINT NOT NULL,
                name VARCHAR(255) NOT NULL,
                type VARCHAR(255) NOT NULL,
                serialnumber VARCHAR(255) NOT NULL,
                standard BIGINT NOT NULL,
                CONSTRAINT fk_account FOREIGN KEY(account) REFERENCES account(id) ON DELETE CASCADE ON UPDATE CASCADE,
                CONSTRAINT fk_standard FOREIGN KEY(standard) REFERENCES standard(id) ON DELETE CASCADE ON UPDATE CASCADE
            );
        </sql>
        <rollback>
            DROP TABLE IF EXISTS machine;
        </rollback>
    </changeSet>

    <changeSet id="machine_machine_category_table" author="topal">
        <sql>
            CREATE TABLE machine_machine_category(
                machine BIGINT NOT NULL,
                category  BIGINT NOT NULL,
                CONSTRAINT fk_machine FOREIGN KEY(machine) REFERENCES machine(id) ON DELETE CASCADE ON UPDATE CASCADE,
                CONSTRAINT fk_category FOREIGN KEY(category) REFERENCES machine_category(id) ON DELETE CASCADE ON UPDATE CASCADE,
                CONSTRAINT pk_machine_machine_category PRIMARY KEY(machine,category)
            );
        </sql>
        <rollback>
            DROP TABLE IF EXISTS machine_machine_category;
        </rollback>
    </changeSet>

    <changeSet id="machine_file_table" author="topal">
        <sql>
            CREATE TABLE machine_file (
                  id BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
                  machine BIGINT NOT NULL,
                  s3_key VARCHAR(255) NOT NULL,
                  sub_type VARCHAR(255) NOT NULL,
                  original_file_name VARCHAR(255) NOT NULL,
                  url VARCHAR(255) NOT NULL,
                  content_type VARCHAR(255) NOT NULL,
                  size BIGINT NOT NULL,
                  CONSTRAINT fk_machine FOREIGN KEY(machine) REFERENCES machine(id) ON DELETE CASCADE ON UPDATE CASCADE
            );
        </sql>
        <rollback>
            DROP TABLE IF EXISTS machine_file;
        </rollback>
    </changeSet>
    <changeSet id="serial_number_table" author="topal">
        <sql>
            CREATE TABLE serial_number (
               id BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
               machine BIGINT NOT NULL,
               sn VARCHAR(255) NOT NULL,
               CONSTRAINT fk_machine FOREIGN KEY(machine) REFERENCES machine(id) ON DELETE CASCADE ON UPDATE CASCADE,
               CONSTRAINT unique_serial_number_machine UNIQUE (sn, machine)
            );
        </sql>
        <rollback>
            DROP TABLE IF EXISTS serial_number;
        </rollback>
    </changeSet>
    <changeSet id="doc_table" author="topal">
        <sql>
            CREATE TABLE doc (
               id BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
               issuance_date DATE NOT NULL,
               production_date DATE NOT NULL,
               production_manager VARCHAR(255) NOT NULL,
                serial_number BIGINT NOT NULL UNIQUE,
               CONSTRAINT fk_serial_number FOREIGN KEY(serial_number) REFERENCES serial_number(id) ON DELETE CASCADE ON UPDATE CASCADE
            );
        </sql>
        <rollback>
            DROP TABLE IF EXISTS doc;
        </rollback>
    </changeSet>
    <changeSet id="pcd_table" author="topal">
        <sql>
            CREATE TABLE pcd (
                 id BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
                 production_start_date DATE NOT NULL,
                 production_manager VARCHAR(255) NOT NULL,
                 order_number VARCHAR(255) NOT NULL,
                 quantity INT NOT NULL,
                 cutting_production_start_date DATE NOT NULL,
                 welding_production_start_date DATE NOT NULL,
                 modding_production_start_date DATE NOT NULL,
                 serial_number BIGINT NOT NULL UNIQUE,
                 CONSTRAINT fk_serial_number FOREIGN KEY(serial_number) REFERENCES serial_number(id) ON DELETE CASCADE ON UPDATE CASCADE
            );
        </sql>
        <rollback>
            DROP TABLE IF EXISTS pcd;
        </rollback>
    </changeSet>
    <changeSet id="materials_list_table" author="topal">
        <sql>
            CREATE TABLE materials_list (
                     id BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
                     issuance_date DATE NOT NULL,
                     production_date DATE NOT NULL,
                     production_manager VARCHAR(255) NOT NULL,
                     serial_number BIGINT NOT NULL UNIQUE,
                     CONSTRAINT fk_serial_number FOREIGN KEY(serial_number) REFERENCES serial_number(id) ON DELETE CASCADE ON UPDATE CASCADE
            );
        </sql>
        <rollback>
            DROP TABLE IF EXISTS materials_list;
        </rollback>
    </changeSet>
    <changeSet id="material_table" author="topal">
        <sql>
            CREATE TABLE material (
            id BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
            materials_list BIGINT NOT NULL,
            name VARCHAR(255) NOT NULL,
            description VARCHAR(255) NOT NULL,
            sn VARCHAR(255) NOT NULL,
            supplier VARCHAR(255) NOT NULL,
            CONSTRAINT fk_materials_list FOREIGN KEY(materials_list) REFERENCES materials_list(id) ON DELETE CASCADE ON UPDATE CASCADE
            );
        </sql>
        <rollback>
            DROP TABLE IF EXISTS material;
        </rollback>
    </changeSet>
    <changeSet id="rename_standard_column_to_directive" author="topal">
        <sql>
            ALTER TABLE standard RENAME TO directive;
            ALTER TABLE directive ADD directive_type  VARCHAR(255) NOT NULL default '';
            ALTER TABLE machine RENAME standard TO directive;
        </sql>
        <rollback>
            ALTER TABLE machine RENAME directive TO standard;
            ALTER TABLE directive DROP COLUMN directive_type;
            ALTER TABLE directive RENAME TO standard;
        </rollback>
    </changeSet>
    <changeSet id="add_column_standard_to_machine_table" author="topal">
        <sql>
            ALTER TABLE machine ADD standard  VARCHAR(255) NOT NULL default '';
        </sql>
        <rollback>
            ALTER TABLE machine DROP COLUMN standard;
        </rollback>
    </changeSet>
    <changeSet id="insert_authorities" author="topal">
        <sql>
            INSERT INTO authority(authority_code, authority_scope, authority_domain)
            VALUES ('GET_MACHINES', 'VIEW', 'MACHINES'),
                   ('GET_MACHINE', 'VIEW', 'MACHINES'),
                   ('UPDATE_MACHINE', 'PROCESS', 'MACHINES'),
                   ('GET_MACHINE_CATEGORIES', 'VIEW', 'MACHINES'),
                   ('UPLOAD_MACHINE_FILE', 'PROCESS', 'MACHINES'),
                   ('DELETE_MACHINE_FILE', 'PROCESS', 'MACHINES'),
                   ('CREATE_MACHINE', 'PROCESS', 'MACHINES'),
                   ('DELETE_MACHINE', 'PROCESS', 'MACHINES'),
                   ('GET_SERIAL_NUMBER', 'VIEW', 'SERIAL_NUMBERS'),
                   ('UPDATE_DOC', 'PROCESS', 'DOC'),
                   ('CREATE_DOC', 'PROCESS', 'DOC'),
                   ('GENERATE_DOC_PDF', 'VIEW', 'DOC'),
                   ('GET_STANDARDS', 'VIEW', 'STANDARDS'),
                   ('UPDATE_SERIAL_NUMBER', 'PROCESS', 'SERIAL_NUMBERS');
        </sql>
        <rollback>
            DELETE FROM authority WHERE authority_code in (
                'GET_MACHINES',
                'GET_MACHINE',
                'UPDATE_MACHINE',
                'GET_MACHINE_CATEGORIES',
                'UPLOAD_MACHINE_FILE',
                'DELETE_MACHINE_FILE',
                'CREATE_MACHINE',
                'DELETE_MACHINE',
                'GET_SERIAL_NUMBER',
                'UPDATE_DOC',
                'CREATE_DOC',
                'GENERATE_DOC_PDF',
                'GET_STANDARDS',
                'UPDATE_SERIAL_NUMBER'
            );
        </rollback>
    </changeSet>
</databaseChangeLog>

