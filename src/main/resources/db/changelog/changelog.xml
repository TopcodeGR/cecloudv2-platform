<?xml version="1.1" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext" xmlns:pro="http://www.liquibase.org/xml/ns/pro" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd http://www.liquibase.org/xml/ns/pro http://www.liquibase.org/xml/ns/pro/liquibase-pro-latest.xsd http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-latest.xsd">

    <changeSet id="account_table" author="topal">
        <sql>
            CREATE TABLE account (
                id BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
                userid VARCHAR(255) NOT NULL,
                phone VARCHAR(255) NOT NULL ,
                firstname VARCHAR(255) NOT NULL,
                lastname VARCHAR(255) NOT NULL,
                businessname VARCHAR(255) NOT NULL,
                country VARCHAR(255) NOT NULL,
                city VARCHAR(255) NOT NULL,
                address VARCHAR(255) NOT NULL,
                addressnumber VARCHAR(255) NOT NULL,
                zipcode VARCHAR(255) NOT NULL,
                afm VARCHAR(255) NOT NULL,
                doi VARCHAR(255) NOT NULL,
                logo VARCHAR(255) NOT NULL,
                signature VARCHAR(255) NOT NULL,
                enabled BOOLEAN NOT NULL
            );
        </sql>
        <rollback>
            DROP TABLE IF EXISTS account;
        </rollback>
    </changeSet>
    <changeSet id="machine_category_table" author="topal">
        <sql>
            CREATE TABLE machine_category (
                id BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
                name VARCHAR(255) NOT NULL UNIQUE
            );
        </sql>
        <rollback>
            DROP TABLE IF EXISTS machine_category;
        </rollback>
    </changeSet>

    <changeSet id="machine" author="topal">
        <sql>
            CREATE TABLE machine (
                id BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
                account BIGINT NOT NULL,
                name VARCHAR(255) NOT NULL,
                type VARCHAR(255) NOT NULL,
                serialnumber VARCHAR(255) NOT NULL,
                standard VARCHAR(255) NOT NULL,
                CONSTRAINT fk_account FOREIGN KEY(account) REFERENCES account(id) ON DELETE CASCADE ON UPDATE CASCADE
            );
        </sql>
        <rollback>
            DROP TABLE IF EXISTS machine;
        </rollback>
    </changeSet>

    <changeSet id="machine_machine_category_table" author="topal">
        <sql>
            CREATE TABLE machine_machine_category(
                machine BIGINT NOT NULL,
                category  BIGINT NOT NULL,
                CONSTRAINT fk_machine FOREIGN KEY(machine) REFERENCES machine(id) ON DELETE CASCADE ON UPDATE CASCADE,
                CONSTRAINT fk_category FOREIGN KEY(category) REFERENCES machine_category(id) ON DELETE CASCADE ON UPDATE CASCADE,
                CONSTRAINT pk_machine_machine_category PRIMARY KEY(machine,category)
            );
        </sql>
        <rollback>
            DROP TABLE IF EXISTS machine_machine_category;
        </rollback>
    </changeSet>

    <changeSet id="machine_file_table" author="topal">
        <sql>
            CREATE TABLE machine_file (
                  id BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
                  machine BIGINT NOT NULL,
                  s3_key VARCHAR(255) NOT NULL,
                  sub_type VARCHAR(255) NOT NULL,
                  original_file_name VARCHAR(255) NOT NULL,
                  url VARCHAR(255) NOT NULL,
                  content_type VARCHAR(255) NOT NULL,
                  size BIGINT NOT NULL,
                  CONSTRAINT fk_machine FOREIGN KEY(machine) REFERENCES machine(id) ON DELETE CASCADE ON UPDATE CASCADE
            );
        </sql>
        <rollback>
            DROP TABLE IF EXISTS machine_file;
        </rollback>
    </changeSet>
    <changeSet id="serial_number_table" author="topal">
        <sql>
            CREATE TABLE serial_number (
               id BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
               machine BIGINT NOT NULL,
               sn VARCHAR(255) NOT NULL,
               CONSTRAINT fk_machine FOREIGN KEY(machine) REFERENCES machine(id) ON DELETE CASCADE ON UPDATE CASCADE,
               CONSTRAINT unique_serial_number_machine UNIQUE (sn, machine)
            );
        </sql>
        <rollback>
            DROP TABLE IF EXISTS serial_number;
        </rollback>
    </changeSet>
    <changeSet id="doc_table" author="topal">
        <sql>
            CREATE TABLE doc (
               id BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
               issuance_date DATE NOT NULL,
               production_date DATE NOT NULL,
               production_manager VARCHAR(255) NOT NULL,
                serial_number BIGINT NOT NULL UNIQUE,
               CONSTRAINT fk_serial_number FOREIGN KEY(serial_number) REFERENCES serial_number(id) ON DELETE CASCADE ON UPDATE CASCADE
            );
        </sql>
        <rollback>
            DROP TABLE IF EXISTS doc;
        </rollback>
    </changeSet>
    <changeSet id="pcd_table" author="topal">
        <sql>
            CREATE TABLE pcd (
                 id BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
                 production_start_date DATE NOT NULL,
                 production_manager VARCHAR(255) NOT NULL,
                 order_number VARCHAR(255) NOT NULL,
                 quantity INT NOT NULL,
                 cutting_production_start_date DATE NOT NULL,
                 welding_production_start_date DATE NOT NULL,
                 modding_production_start_date DATE NOT NULL,
                 serial_number BIGINT NOT NULL UNIQUE,
                 CONSTRAINT fk_serial_number FOREIGN KEY(serial_number) REFERENCES serial_number(id) ON DELETE CASCADE ON UPDATE CASCADE
            );
        </sql>
        <rollback>
            DROP TABLE IF EXISTS pcd;
        </rollback>
    </changeSet>
    <changeSet id="materials_list_table" author="topal">
        <sql>
            CREATE TABLE materials_list (
                     id BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
                     issuance_date DATE NOT NULL,
                     production_date DATE NOT NULL,
                     production_manager VARCHAR(255) NOT NULL,
                     serial_number BIGINT NOT NULL UNIQUE,
                     CONSTRAINT fk_serial_number FOREIGN KEY(serial_number) REFERENCES serial_number(id) ON DELETE CASCADE ON UPDATE CASCADE
            );
        </sql>
        <rollback>
            DROP TABLE IF EXISTS materials_list;
        </rollback>
    </changeSet>
    <changeSet id="material_table" author="topal">
        <sql>
            CREATE TABLE material (
            id BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
            materials_list BIGINT NOT NULL,
            name VARCHAR(255) NOT NULL,
            description VARCHAR(255) NOT NULL,
            sn VARCHAR(255) NOT NULL,
            supplier VARCHAR(255) NOT NULL,
            CONSTRAINT fk_materials_list FOREIGN KEY(materials_list) REFERENCES materials_list(id) ON DELETE CASCADE ON UPDATE CASCADE
            );
        </sql>
        <rollback>
            DROP TABLE IF EXISTS material;
        </rollback>
    </changeSet>
    <changeSet id="file_template_table" author="topal">
        <sql>
            CREATE TABLE file_template (
              id BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
              url VARCHAR(255) NOT NULL,
              name VARCHAR(255) NOT NULL unique
            );
        </sql>
        <rollback>
            DROP TABLE IF EXISTS file_template;
        </rollback>
    </changeSet>
    <changeSet id="file_template_asset_table" author="topal">
        <sql>
            CREATE TABLE file_template_asset (
               id BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
               url VARCHAR(255) NOT NULL,
               licence VARCHAR(255) NOT NULL,
               type VARCHAR(255) NOT NULL,
                file_template BIGINT NOT NULL ,
               CONSTRAINT fk_file_template FOREIGN KEY(file_template) REFERENCES file_template(id) ON DELETE CASCADE ON UPDATE CASCADE
            );
        </sql>
        <rollback>
            DROP TABLE IF EXISTS file_template_asset;
        </rollback>
    </changeSet>
    <changeSet id="authority_table" author="topal">
        <sql>
            CREATE TABLE authority (
             id BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
             authority_code VARCHAR(255) NOT NULL,
             authority_scope VARCHAR(255) NOT NULL,
             authority_domain VARCHAR(255) NOT NULL
            );
        </sql>
        <rollback>
            DROP TABLE IF EXISTS authority;
        </rollback>
    </changeSet>
    <changeSet id="account_authority_table" author="topal">
        <sql>
            CREATE TABLE account_authority (
               account BIGINT NOT NULL,
               authority  BIGINT NOT NULL,
               CONSTRAINT fk_account FOREIGN KEY(account) REFERENCES account(id) ON DELETE CASCADE ON UPDATE CASCADE,
               CONSTRAINT fk_authority FOREIGN KEY(authority) REFERENCES authority(id) ON DELETE CASCADE ON UPDATE CASCADE,
               CONSTRAINT pk_account_authority PRIMARY KEY(account,authority)
            );
        </sql>
        <rollback>
            DROP TABLE IF EXISTS account_authority;
        </rollback>
    </changeSet>
    <changeSet id="functionality_table" author="topal">
        <sql>
            CREATE TABLE functionality (
                id BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
                ui_title VARCHAR(255) NOT NULL,
                code VARCHAR(255) NOT NULL,
                enabled  BOOLEAN NOT NULL,
                ui_path VARCHAR(255) NOT NULL
            );
        </sql>
        <rollback>
            DROP TABLE IF EXISTS functionality;
        </rollback>
    </changeSet>
    <changeSet id="functionality_authority" author="topal">
        <sql>
            CREATE TABLE functionality_authority (
                   functionality BIGINT NOT NULL,
                   authority  BIGINT NOT NULL,
                   CONSTRAINT fk_functionality FOREIGN KEY(functionality) REFERENCES functionality(id) ON DELETE CASCADE ON UPDATE CASCADE,
                   CONSTRAINT fk_authority FOREIGN KEY(authority) REFERENCES authority(id) ON DELETE CASCADE ON UPDATE CASCADE,
                   CONSTRAINT pk_functionality_authority PRIMARY KEY(functionality,authority)
            );
        </sql>
        <rollback>
            DROP TABLE IF EXISTS functionality_authority;
        </rollback>
    </changeSet>
</databaseChangeLog>

